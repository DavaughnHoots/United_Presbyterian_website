<div class="max-w-7xl mx-auto px-4 py-8">
  <div class="journey-editor">
    <div class="editor-header">
      <div>
        <h1>Edit Journey: <%= journey.title %></h1>
        <p class="text-muted"><%= journey.description %></p>
      </div>
      <div class="header-actions">
        <a href="/admin/journeys/preview/<%= journey.id %>" target="_blank" class="btn btn-secondary">
          <i class="fas fa-eye"></i> Preview
        </a>
        <button class="btn btn-primary" onclick="saveJourney()">
          <i class="fas fa-save"></i> Save Changes
        </button>
        <a href="/admin/journeys" class="btn btn-outline-secondary">
          <i class="fas fa-arrow-left"></i> Back
        </a>
      </div>
    </div>

    <div class="journey-settings">
      <div class="form-row">
        <div class="form-group col-md-6">
          <label for="journeyTitle">Journey Title</label>
          <input type="text" id="journeyTitle" class="form-control" value="<%= journey.title %>">
        </div>
        <div class="form-group col-md-3">
          <label for="journeyTheme">Theme</label>
          <select id="journeyTheme" class="form-control">
            <option value="general" <%= journey.theme === 'general' ? 'selected' : '' %>>General</option>
            <option value="prayer" <%= journey.theme === 'prayer' ? 'selected' : '' %>>Prayer</option>
            <option value="scripture" <%= journey.theme === 'scripture' ? 'selected' : '' %>>Scripture Study</option>
            <option value="discipleship" <%= journey.theme === 'discipleship' ? 'selected' : '' %>>Discipleship</option>
            <option value="advent" <%= journey.theme === 'advent' ? 'selected' : '' %>>Advent</option>
            <option value="lent" <%= journey.theme === 'lent' ? 'selected' : '' %>>Lent</option>
          </select>
        </div>
        <div class="form-group col-md-3">
          <label for="journeyStatus">Status</label>
          <select id="journeyStatus" class="form-control">
            <option value="false" <%= !journey.is_published ? 'selected' : '' %>>Draft</option>
            <option value="true" <%= journey.is_published ? 'selected' : '' %>>Published</option>
          </select>
        </div>
      </div>
      <div class="form-group">
        <label for="journeyDescription">Description</label>
        <textarea id="journeyDescription" class="form-control" rows="2"><%= journey.description %></textarea>
      </div>
    </div>

    <div class="days-section">
      <div class="section-header">
        <h2>Journey Days (<%= journeyDays.length %>)</h2>
        <button class="btn btn-primary btn-sm" onclick="addDay()">
          <i class="fas fa-plus"></i> Add Day
        </button>
      </div>

      <div class="days-list">
        <% journeyDays.forEach((day, index) => { %>
          <div class="day-card" data-day-id="<%= day.id %>" data-day-number="<%= day.day_number %>">
            <div class="day-header">
              <div class="day-number">Day <%= day.day_number %></div>
              <div class="day-actions">
                <button class="btn btn-sm btn-outline-primary" onclick="editDay('<%= day.id || '' %>')">
                  <i class="fas fa-edit"></i> Edit
                </button>
                <button class="btn btn-sm btn-outline-danger" onclick="deleteDay('<%= day.id || '' %>', <%= day.day_number %>)">
                  <i class="fas fa-trash"></i>
                </button>
              </div>
            </div>
            
            <div class="day-content">
              <h3 class="day-title"><%= day.title || 'Untitled Day' %></h3>
              <p class="day-description"><%= day.description || 'No description' %></p>
              
              <div class="day-contents">
                <% if (day.contents && day.contents.length > 0) { %>
                  <div class="content-count">
                    <i class="fas fa-list"></i> <%= day.contents.length %> content items
                  </div>
                <% } else { %>
                  <div class="no-content">
                    <i class="fas fa-exclamation-circle"></i> No content added yet
                  </div>
                <% } %>
              </div>
            </div>
          </div>
        <% }) %>
      </div>
    </div>
  </div>

  <!-- Day Editor Modal -->
  <div id="dayModal" class="modal" style="display: none;">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h3>Edit Day <span id="modalDayNumber"></span></h3>
          <button type="button" class="close" onclick="closeDayModal()">&times;</button>
        </div>
        <div class="modal-body">
          <input type="hidden" id="modalDayId">
          <div class="form-group">
            <label for="modalDayTitle">Day Title</label>
            <input type="text" id="modalDayTitle" class="form-control" placeholder="e.g., Finding Peace">
          </div>
          <div class="form-group">
            <label for="modalDayDescription">Description</label>
            <textarea id="modalDayDescription" class="form-control" rows="3" 
                      placeholder="Brief description of this day's focus..."></textarea>
          </div>
          
          <h4>Content Items</h4>
          <div id="modalDayContents" class="content-items">
            <!-- Content items will be loaded here -->
          </div>
          
          <button class="btn btn-sm btn-primary" onclick="addContentItem()">
            <i class="fas fa-plus"></i> Add Content
          </button>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" onclick="closeDayModal()">Cancel</button>
          <button type="button" class="btn btn-primary" onclick="saveDayChanges()">Save Changes</button>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
.journey-editor {
  background: white;
  padding: 2rem;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.editor-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 2rem;
  padding-bottom: 1rem;
  border-bottom: 1px solid #e0e0e0;
}

.header-actions {
  display: flex;
  gap: 0.5rem;
}

.journey-settings {
  background: #f8f9fa;
  padding: 1.5rem;
  border-radius: 8px;
  margin-bottom: 2rem;
}

.days-section {
  margin-top: 2rem;
}

.section-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
}

.days-list {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.day-card {
  background: white;
  border: 1px solid #e0e0e0;
  border-radius: 8px;
  padding: 1.5rem;
  transition: box-shadow 0.3s ease;
}

.day-card:hover {
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.day-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

.day-number {
  background: #87CEEB;
  color: white;
  padding: 0.5rem 1rem;
  border-radius: 20px;
  font-weight: bold;
}

.day-actions {
  display: flex;
  gap: 0.5rem;
}

.day-title {
  font-size: 1.25rem;
  margin: 0 0 0.5rem 0;
}

.day-description {
  color: #666;
  margin-bottom: 1rem;
}

.day-contents {
  padding-top: 1rem;
  border-top: 1px solid #e0e0e0;
}

.content-count {
  color: #28a745;
  font-size: 0.9rem;
}

.no-content {
  color: #dc3545;
  font-size: 0.9rem;
}

.modal {
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0,0,0,0.5);
  display: flex;
  align-items: center;
  justify-content: center;
}

.modal-dialog {
  width: 90%;
  max-width: 600px;
}

.modal-content {
  background: white;
  border-radius: 8px;
  box-shadow: 0 4px 20px rgba(0,0,0,0.2);
}

.modal-header {
  padding: 1.5rem;
  border-bottom: 1px solid #e0e0e0;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.modal-body {
  padding: 1.5rem;
  max-height: 60vh;
  overflow-y: auto;
}

.modal-footer {
  padding: 1rem 1.5rem;
  border-top: 1px solid #e0e0e0;
  display: flex;
  justify-content: flex-end;
  gap: 0.5rem;
}

.content-items {
  margin: 1rem 0;
  padding: 1rem;
  background: #f8f9fa;
  border-radius: 4px;
  min-height: 100px;
}

.content-item {
  background: white;
  padding: 0.75rem;
  margin-bottom: 0.5rem;
  border: 1px solid #e0e0e0;
  border-radius: 4px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.close {
  background: none;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  color: #666;
}
</style>

<script>
let currentJourneyId = '<%= journey.id %>';
let journeyDays = <%- JSON.stringify(journeyDays) %>;

async function saveJourney() {
  const journeyData = {
    id: currentJourneyId,
    title: document.getElementById('journeyTitle').value,
    description: document.getElementById('journeyDescription').value,
    theme: document.getElementById('journeyTheme').value,
    is_published: document.getElementById('journeyStatus').value === 'true',
    duration_days: journeyDays.length
  };
  
  try {
    const response = await fetch('/admin/api/journeys', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(journeyData)
    });
    
    if (response.ok) {
      alert('Journey saved successfully!');
    } else {
      const error = await response.json();
      alert('Error: ' + (error.error || 'Failed to save journey'));
    }
  } catch (error) {
    console.error('Error saving journey:', error);
    alert('Failed to save journey');
  }
}

function addDay() {
  const newDayNumber = journeyDays.length + 1;
  const dayData = {
    dayNumber: newDayNumber,
    title: `Day ${newDayNumber}`,
    description: '',
    contents: []
  };
  
  saveDayToServer(dayData, true);
}

function editDay(dayId) {
  if (!dayId) {
    alert('Please save the journey first to edit days');
    return;
  }
  const day = journeyDays.find(d => d.id === dayId);
  if (!day) return;
  
  document.getElementById('modalDayId').value = dayId;
  document.getElementById('modalDayNumber').textContent = day.day_number;
  document.getElementById('modalDayTitle').value = day.title || '';
  document.getElementById('modalDayDescription').value = day.description || '';
  
  // Load contents
  const contentsDiv = document.getElementById('modalDayContents');
  if (day.contents && day.contents.length > 0) {
    contentsDiv.innerHTML = day.contents.map((content, index) => `
      <div class="content-item">
        <div>
          <strong>${content.content_type}</strong>
          <span class="text-muted ml-2">${content.duration_minutes || 5} minutes</span>
        </div>
        <button class="btn btn-sm btn-danger" onclick="removeContentItem(${index})">
          <i class="fas fa-trash"></i>
        </button>
      </div>
    `).join('');
  } else {
    contentsDiv.innerHTML = '<p class="text-muted">No content items yet</p>';
  }
  
  document.getElementById('dayModal').style.display = 'flex';
}

function closeDayModal() {
  document.getElementById('dayModal').style.display = 'none';
}

async function saveDayChanges() {
  const dayId = document.getElementById('modalDayId').value;
  const day = journeyDays.find(d => d.id == dayId);
  
  const dayData = {
    dayNumber: day.day_number,
    title: document.getElementById('modalDayTitle').value,
    description: document.getElementById('modalDayDescription').value,
    contents: day.contents || []
  };
  
  await saveDayToServer(dayData, false);
  closeDayModal();
}

async function saveDayToServer(dayData, isNew) {
  try {
    const response = await fetch(`/admin/api/journeys/${currentJourneyId}/days`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(dayData)
    });
    
    if (response.ok) {
      if (isNew) {
        alert('Day added successfully!');
      }
      window.location.reload();
    } else {
      const error = await response.json();
      alert('Error: ' + (error.error || 'Failed to save day'));
    }
  } catch (error) {
    console.error('Error saving day:', error);
    alert('Failed to save day');
  }
}

async function deleteDay(dayId, dayNumber) {
  if (!dayId) {
    alert('Cannot delete unsaved day. Please reload the page.');
    return;
  }
  if (!confirm(`Are you sure you want to delete Day ${dayNumber}?`)) {
    return;
  }
  
  try {
    const response = await fetch(`/admin/api/journeys/${currentJourneyId}/days/${dayId}`, {
      method: 'DELETE'
    });
    
    if (response.ok) {
      window.location.reload();
    } else {
      const error = await response.json();
      alert('Error: ' + (error.error || 'Failed to delete day'));
    }
  } catch (error) {
    console.error('Error deleting day:', error);
    alert('Failed to delete day');
  }
}

function addContentItem() {
  alert('Content selector would open here to choose Bible reading, prayer, reflection, video, etc.');
  // TODO: Implement content selector
}

function removeContentItem(index) {
  // TODO: Implement content removal
}

// Close modal when clicking outside
window.onclick = function(event) {
  if (event.target == document.getElementById('dayModal')) {
    closeDayModal();
  }
}
</script>