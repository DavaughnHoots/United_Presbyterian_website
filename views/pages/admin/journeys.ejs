
<div class="max-w-7xl mx-auto px-4 py-8">
  <div class="header-section">
    <h1>Journey Management</h1>
    <div class="button-group">
      <button onclick="createNewJourney()" class="btn btn-primary">
        <i class="fas fa-plus"></i> Create New Journey
      </button>
      <button onclick="showImportModal()" class="btn btn-secondary">
        <i class="fas fa-file-import"></i> Import Journey
      </button>
    </div>
  </div>

  <% if (journeys.length === 0) { %>
    <div class="empty-state">
      <i class="fas fa-route fa-3x text-muted mb-3"></i>
      <h3>No Journeys Created Yet</h3>
      <p>Create your first spiritual journey to guide members on their faith path.</p>
      <button onclick="createNewJourney()" class="btn btn-primary mt-3">Create First Journey</button>
    </div>
  <% } else { %>
    <div class="journeys-grid">
      <% journeys.forEach(journey => { %>
        <div class="journey-card">
          <div class="journey-header">
            <h3><%= journey.title %></h3>
            <span class="badge <%= journey.is_published ? 'badge-success' : 'badge-secondary' %>">
              <%= journey.is_published ? 'Published' : 'Draft' %>
            </span>
          </div>
          
          <div class="journey-body">
            <p class="journey-description"><%= journey.description %></p>
            
            <div class="journey-meta">
              <div class="meta-item">
                <i class="fas fa-calendar"></i>
                <span><%= journey.duration_days %> days</span>
              </div>
              <div class="meta-item">
                <i class="fas fa-tag"></i>
                <span><%= journey.theme %></span>
              </div>
              <div class="meta-item">
                <i class="fas fa-users"></i>
                <span><%= journey.participant_count || 0 %> participants</span>
              </div>
            </div>
          </div>
          
          <div class="journey-actions">
            <a href="/admin/journeys/edit/<%= journey.id %>" class="btn btn-sm btn-primary">
              <i class="fas fa-edit"></i> Edit
            </a>
            <button class="btn btn-sm btn-secondary" onclick="previewJourney('<%= journey.id %>')">
              <i class="fas fa-eye"></i> Preview
            </button>
            <button class="btn btn-sm btn-danger" onclick="deleteJourney('<%= journey.id %>', '<%= journey.title %>')">
              <i class="fas fa-trash"></i> Delete
            </button>
          </div>
        </div>
      <% }) %>
    </div>
  <% } %>
</div>

<style>
.header-section {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
}

.empty-state {
  text-align: center;
  padding: 4rem 2rem;
  background: #f8f9fa;
  border-radius: 8px;
}

.journeys-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  gap: 1.5rem;
}

.journey-card {
  background: white;
  border: 1px solid #e0e0e0;
  border-radius: 8px;
  padding: 1.5rem;
  transition: box-shadow 0.3s ease;
}

.journey-card:hover {
  box-shadow: 0 4px 12px rgba(0,0,0,0.1);
}

.journey-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 1rem;
}

.journey-header h3 {
  margin: 0;
  font-size: 1.25rem;
}

.journey-description {
  color: #666;
  margin-bottom: 1rem;
  line-height: 1.5;
}

.journey-meta {
  display: flex;
  gap: 1.5rem;
  margin-bottom: 1rem;
  font-size: 0.9rem;
  color: #666;
}

.meta-item {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.journey-actions {
  display: flex;
  gap: 0.5rem;
  padding-top: 1rem;
  border-top: 1px solid #e0e0e0;
}

.badge {
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  font-size: 0.75rem;
  font-weight: 600;
}

.badge-success {
  background: #28a745;
  color: white;
}

.badge-secondary {
  background: #6c757d;
  color: white;
}

/* Import Modal Styles */
.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

.modal-dialog {
  width: 90%;
  max-width: 800px;
}

.modal-content {
  background: white;
  border-radius: 8px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  max-height: 90vh;
  display: flex;
  flex-direction: column;
}

.modal-header {
  padding: 1.5rem;
  border-bottom: 1px solid #e0e0e0;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.modal-header h3 {
  margin: 0;
}

.modal-body {
  padding: 1.5rem;
  overflow-y: auto;
  flex: 1;
}

.modal-footer {
  padding: 1rem 1.5rem;
  border-top: 1px solid #e0e0e0;
  display: flex;
  justify-content: flex-end;
  gap: 0.5rem;
}

.close {
  background: none;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  color: #666;
}

.close:hover {
  color: #000;
}

.form-control {
  width: 100%;
  padding: 0.5rem;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-family: monospace;
}

.form-check {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.button-group {
  display: flex;
  gap: 1rem;
}

details summary {
  cursor: pointer;
  user-select: none;
}

details summary:hover {
  text-decoration: underline;
}
</style>

<script>
async function createNewJourney() {
  const title = prompt('Enter journey title:');
  if (!title) return;
  
  const description = prompt('Enter journey description:');
  if (!description) return;
  
  try {
    const response = await fetch('/admin/api/journeys', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        title,
        description,
        duration_days: 3
      })
    });
    
    if (response.ok) {
      const result = await response.json();
      window.location.href = `/admin/journeys/edit/${result.journey.id}`;
    } else {
      const error = await response.json();
      alert('Error: ' + (error.error || 'Failed to create journey'));
    }
  } catch (error) {
    console.error('Error creating journey:', error);
    alert('Failed to create journey');
  }
}

function previewJourney(id) {
  window.open(`/admin/journeys/preview/${id}`, '_blank');
}

async function deleteJourney(id, title) {
  if (!confirm(`Are you sure you want to delete the journey "${title}"? This action cannot be undone.`)) {
    return;
  }
  
  try {
    const response = await fetch(`/admin/api/journeys/${id}`, {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json'
      }
    });
    
    if (response.ok) {
      window.location.reload();
    } else {
      const error = await response.json();
      alert('Error: ' + (error.error || 'Failed to delete journey'));
    }
  } catch (error) {
    console.error('Error deleting journey:', error);
    alert('Failed to delete journey');
  }
}

// Import Journey Modal
function showImportModal() {
  const modal = document.getElementById('importModal');
  if (!modal) {
    createImportModal();
  }
  document.getElementById('importModal').style.display = 'block';
}

function hideImportModal() {
  document.getElementById('importModal').style.display = 'none';
  document.getElementById('importData').value = '';
  document.getElementById('importError').style.display = 'none';
}

function createImportModal() {
  const modalHtml = `
    <div id="importModal" class="modal" style="display: none;">
      <div class="modal-dialog modal-lg">
        <div class="modal-content">
          <div class="modal-header">
            <h3>Import Journey</h3>
            <button type="button" class="close" onclick="hideImportModal()">&times;</button>
          </div>
          <div class="modal-body">
            <p class="mb-3">Paste your journey JSON data below. The format should include journey details, days, and content.</p>
            
            <div class="mb-3">
              <label for="importData" class="form-label">Journey Data (JSON format)</label>
              <textarea id="importData" class="form-control" rows="15" placeholder='{"journey": {...}, "days": [...]}'></textarea>
            </div>
            
            <div class="form-check mb-3">
              <input type="checkbox" class="form-check-input" id="createNewContent" checked>
              <label class="form-check-label" for="createNewContent">
                Create new content items (unchecked will try to link existing content by title)
              </label>
            </div>
            
            <div id="importError" class="alert alert-danger" style="display: none;"></div>
            
            <details class="mb-3">
              <summary class="cursor-pointer text-primary">View Example Format</summary>
              <pre class="bg-light p-3 mt-2" style="max-height: 300px; overflow-y: auto;">${JSON.stringify({
                journey: {
                  title: "Finding Peace in Troubled Times",
                  description: "A 5-day journey...",
                  duration_days: 5,
                  theme: "peace"
                },
                days: [{
                  day_number: 1,
                  title: "Day Title",
                  description: "Day description",
                  content: [{
                    type: "scripture_reading",
                    title: "Content Title",
                    content: "Content text...",
                    duration_minutes: 5,
                    order_index: 1
                  }]
                }]
              }, null, 2)}</pre>
            </details>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" onclick="hideImportModal()">Cancel</button>
            <button type="button" class="btn btn-primary" onclick="importJourney()">Import Journey</button>
          </div>
        </div>
      </div>
    </div>
  `;
  
  document.body.insertAdjacentHTML('beforeend', modalHtml);
}

async function importJourney() {
  const importData = document.getElementById('importData').value.trim();
  const createNew = document.getElementById('createNewContent').checked;
  const errorDiv = document.getElementById('importError');
  
  if (!importData) {
    errorDiv.textContent = 'Please paste journey data';
    errorDiv.style.display = 'block';
    return;
  }
  
  let data;
  try {
    data = JSON.parse(importData);
  } catch (e) {
    errorDiv.textContent = 'Invalid JSON format: ' + e.message;
    errorDiv.style.display = 'block';
    return;
  }
  
  // Validate structure
  if (!data.journey || !data.days || !Array.isArray(data.days)) {
    errorDiv.textContent = 'Invalid format: Must include journey object and days array';
    errorDiv.style.display = 'block';
    return;
  }
  
  try {
    const response = await fetch('/admin/api/journeys/import', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        ...data,
        createNewContent: createNew
      })
    });
    
    if (response.ok) {
      const result = await response.json();
      alert('Journey imported successfully!');
      window.location.href = `/admin/journeys/edit/${result.journeyId}`;
    } else {
      const error = await response.json();
      errorDiv.textContent = error.error || 'Failed to import journey';
      errorDiv.style.display = 'block';
    }
  } catch (error) {
    console.error('Error importing journey:', error);
    errorDiv.textContent = 'Failed to import journey: ' + error.message;
    errorDiv.style.display = 'block';
  }
}
</script>

